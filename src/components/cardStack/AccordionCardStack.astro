---
import type { CardStackFragment } from '../../generated/graphql'
import Card from './Card.astro'
import { extractCardData } from './utils'

type Props = Readonly<CardStackFragment>

const { sectionTitle, contentType, itemsPage, itemsArticle, itemsInfocard, accordionTitle } =
	Astro.props

const items =
	contentType === 'pages' ? itemsPage : contentType === 'articles' ? itemsArticle : itemsInfocard

// Client-side JavaScript for accordion behavior
const accordionScript = `
  document.addEventListener('DOMContentLoaded', () => {
    const accordionTitleElement = document.querySelector('.accordion-title');
    const accordionContent = document.querySelector('.accordion-content');
    const accordionIcon = document.querySelector('.accordion-icon');
    
    if (accordionTitleElement && accordionContent) {
      // Initialize - hide content by default
      accordionContent.classList.add('hidden');
      
      accordionTitleElement.addEventListener('click', () => {
        // Toggle content visibility
        accordionContent.classList.toggle('hidden');
        
        // Toggle icon rotation
        if (accordionIcon) {
          accordionIcon.classList.toggle('rotate-180');
        }
      });
    }
  });
`
---

<section class="simple-card-stack py-8 bg-[#DBE1DE]">
	{sectionTitle && <h2 class="font-bold text-2xl mb-6 text-black">{sectionTitle}</h2>}

	{
		accordionTitle && (
			<div class="mb-6">
				<button class="accordion-title flex justify-between items-center w-full text-left font-bold text-xl text-black bg-white p-4 rounded">
					<span>{accordionTitle}</span>
					<span class="accordion-icon transform transition-transform duration-300">▼</span>
				</button>
			</div>
		)
	}

	<div class="accordion-content grid grid-cols-1 md:grid-cols-3 gap-6">
		{
			items?.map((item) => {
				const { title, imageUrl, slug } = extractCardData(item, contentType || '')
				return <Card title={title} imageUrl={imageUrl} slug={slug} />
			})
		}
	</div>

	{/* Bottom Text Placeholder with Arrow */}
	<!-- @israel pending of CTA implementation -->
	<div class="w-36 mt-16 bg-black text-white p-4 flex items-center">
		<span>Text Placeholder</span>
		<span class="text-xl">→</span>
	</div>
</section>

<style>
	.hidden {
		display: none;
	}

	.accordion-title {
		cursor: pointer;
		transition: background-color 0.3s;
	}

	.accordion-title:hover {
		background-color: #f0f0f0;
	}
</style>

<script set:html={accordionScript} />
